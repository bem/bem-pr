block jsdoc {

    default: applyNext(this._data = this.ctx.data)

    content: {
        var data = this._data;
        return applyCtx([
            {
                elem: 'block-name',
                content: 'Блок ' + data.blockName
            },

            {elem: 'bem-block', _data: data},
            data.mods.map(function(mod) {
                return {elem: 'bem-mod', _data: mod};
            })
        ]);
    }

    elem bem-block, content: {
        var data = this._data;
        return [
            {
                block: 'heading',
                mods: {level: 2},
                content: 'Описание'
            },
            {
                elem: 'description',
                content: data.description
            },
            data.jsParams.length > 0
                ? {elem: 'js-params', _data: data.jsParams}
                : '',

            data.methods.length > 0
                ? {elem: 'methods', _data: data.methods}
                : '',
            data.properties.length > 0
                ? {elem: 'properties', _data: data.properties}
                : '',

            data.events.length > 0
                ? {elem: 'events', _data: data.events}
                : ''
        ];
    }

    elem bem-mod, content: {
        var data = this.ctx._data;
        return [
            {
                elem: 'mod-name',
                content: 'Модификатор _' + data.name + '_' + data.value
            },
            {
                elem: 'description',
                content: data.description
            },
            data.methods.length > 0
                ? {elem: 'methods', _data: data.methods}
                : '',
            data.properties.length > 0
                ? {elem: 'properties', _data: data.properties}
                : '',

            data.events.length > 0
                ? {elem: 'events', _data: data.events}
                : ''
        ]
    }

    elem js-params, content: {
        return [
            {
                block: 'heading',
                mods: { level: 3 },
                content: 'JS-параметры'
            },
            {
                elem: 'params-section',
                _data: this.ctx._data
            }
        ];
    }

    elem methods, content: {
        var data = this.ctx._data;

        return [
            {
                block: 'heading',
                mods: { level: 3 },
                content: 'Методы'
            },

   
            data.map(function(method) {
                return {
                    elem: 'method',
                    content: [


                        {
                            elem: 'method-name',
                            content: method.name
                        },

                        method.scope === 'static' && {
                            elem: 'static',
                            content: 'STATIC'
                        },

                        method.access === 'protected' && {
                            elem: 'protected',
                            content: 'PROTECTED'
                        },

                        method.final && {
                            elem: 'final',
                            content: 'FINAL'
                        },

                        method.deprecated && {
                            elem: 'deprecated',
                            content: 'Deprecated: ' + method.deprecated
                        },

                        {
                            elem: 'method-description',
                            content: method.description
                        },
                        method.params && method.params.length ?
                            {
                                elem: 'method-params',
                                _data: method.params
                            } : '',

                        method.returns && method.returns.length ?
                            {
                                elem: 'method-returns',
                                _data: method.returns
                            } : ''
                    ]
                };
            })
        ];

    }

    elem method-params, content: [
        {
            block: 'heading',
            mods: {level: 5},
            content: 'Параметры'
        },
        {
            elem: 'params-section',
            _data: this.ctx._data
        }
    ]

    elem method-returns, content: [
        {
            block: 'heading',
            mods: {level: 5},
            content: 'Возвращаемое значение'
        },

        this.ctx._data.map(function(returns) {
            return {
                elem: 'returns',
                content: [
                    returns.types.join(', '),
                    {
                        elem: 'returns-description',
                        content: returns.description
                    }
                ]
            }
        })

    ]

    elem params-section, content: {
        return this.ctx._data.map(function(param) {
            return {
                elem: 'param',
                content: [
                    {elem: 'param-name', content: param.name},
                    {elem: 'param-type', content: param.types.join(' | ')},
                    {elem: 'param-desc', content: param.description}
                ]
            };
        });
    }

    elem properties, content: {
        return [
            {
                block: 'heading',
                mods: {level: 3},
                content: 'Свойства'
            },

            this.ctx._data.map(function(prop) {
                return {
                    elem: 'property',
                    content: [
                        {
                            elem: 'prop-name',
                            content: prop.name
                        },

                        prop.scope === 'static' && {
                            elem: 'static',
                            content: 'STATIC'
                        },

                        prop.access === 'protected' && {
                            elem: 'protected',
                            content: 'PROTECTED'
                        },


                        prop.types && prop.types.length 
                            ? {elem: 'prop-type', content: 'Типы: ' + prop.types.join(' | ')}
                            : '',

                        prop.deprecated && {
                            elem: 'deprecated',
                            content: 'Deprecated: ' + method.deprecated
                        },
    
                        {
                            elem: 'prop-desc',
                            content: prop.description
                        }
                    ]
                };
            })
        ];
    }

    elem events, content: [
        {
            block: 'heading',
            mods: {level: 3},
            content: 'События'
        },

        this.ctx._data.map(function(event) {
            return [
                {elem: 'event-name', content: event.name},
                {elem: 'event-desc', content: event.description},
 

                event.params && event.params.length
                    ? [
                        {
                            block: 'heading',
                            mods: {level: 5},
                            content: 'Параметры'
                        },
                        {elem: 'params-section', _data: event.params}
                      ]
                    : ''
            ]

        })
    ]
}
